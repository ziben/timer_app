name: Build & Release Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: Build type
        required: true
        default: release
        type: choice
        options:
          - release
          - debug
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: android-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  android:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: ${{ github.event_name == 'workflow_dispatch' && inputs.build_type || 'release' }}
      JAVA_VERSION: '17'
      TZ: 'Asia/Shanghai'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
         
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Configure Android keystore (optional)
        shell: bash
        run: |
          if [[ -n "${ANDROID_KEYSTORE_BASE64}" ]]; then
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/my-release-key.jks
            printf "storePassword=%s\nkeyPassword=%s\nkeyAlias=%s\nstoreFile=my-release-key.jks\n" \
              "$ANDROID_KEYSTORE_PASSWORD" "$ANDROID_KEY_PASSWORD" "$ANDROID_KEY_ALIAS" > android/key.properties
          else
            echo "ANDROID_KEYSTORE_BASE64 is empty; skip signing setup"
          fi
        env:
            ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
            ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
            ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
            ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}

      - name: Build APK (${{ env.BUILD_TYPE }})
        run: |
          if [ "${BUILD_TYPE}" = "release" ]; then
            flutter build apk --release
          else
            flutter build apk --debug
          fi

      - name: Rename APK to custom rule
        id: name_apk
        shell: bash
        run: |
          VERSION=$(grep -Po "(?<=^version: ).*" pubspec.yaml | cut -d'+' -f1 | tr -d '\r')
          DATE=$(date +%Y%m%d)
          OUT="build/app/outputs/flutter-apk"
          SRC="${OUT}/app-${BUILD_TYPE}.apk"
          DEST="${OUT}/TimerApp_v${VERSION}_${DATE}_${BUILD_TYPE}.apk"
          mv "$SRC" "$DEST"
          echo "apk_path=$DEST" >> $GITHUB_OUTPUT
          echo "apk_name=$(basename "$DEST")" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.name_apk.outputs.apk_name }}
          path: ${{ steps.name_apk.outputs.apk_path }}
          if-no-files-found: error
          retention-days: 7

      - name: Create GitHub Release and upload APK
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: 计时助手 v${{ steps.name_apk.outputs.version }}
          files: ${{ steps.name_apk.outputs.apk_path }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
